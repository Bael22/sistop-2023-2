# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P8sZG52O6bVAQ94VWVM-tqhXTQdd-WOx
"""

import random
import queue


# Creamos los procesos 
num_procesos = random.randint(5, 8)
procesos = []


for i in range(num_procesos):
    duracion = random.randint(80, 120)  # Asignar una duración aleatoria entre 80 y 120 ticks
    proceso = {"id": i+1, "duracion": duracion, "tick": 0}
    procesos.append(proceso)


# Imprime Tabla 
print("Planteamiento por Round Robin:")
print("ID\tDuración")
for proceso in procesos:
    print("{}\t{}".format(proceso['id'], proceso['duracion']))


# Crea cola de procesos
cola = queue.Queue()


# Agrega procesos a la cola de procesos
for proceso in procesos:
    cola.put(proceso)


# Definir el rango del quantum de tiempo
quantum_min = 2
quantum_max = 12


# Simular ejecución de procesos
print("\nProcesos de planificación:")
while not cola.empty():
    # Obtener el proceso actual de la cola
    proceso_actual = cola.get()


    # Genera un quantum aleatorio
    quantum = random.randint(quantum_min, quantum_max)


    # Ejecuta el proceso actual por el quantum generado
    for _ in range(quantum):
        proceso_actual["duracion"] -= 1
        proceso_actual["tick"] += 1
        print(f"Tick {proceso_actual['tick']}: Proceso {proceso_actual['id']} ejecutándose")


        # Verificar si el proceso ha terminado
        if proceso_actual["duracion"] == 0:
            print(f"\n\t\t Proceso {proceso_actual['id']} ha terminado \n")
            break


    # Si el proceso aún no ha terminado, volver a agregarlo a la cola de procesos
    if proceso_actual["duracion"] > 0:
        cola.put(proceso_actual)


print("\n Todos los procesos han terminado.\n")