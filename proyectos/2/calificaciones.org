#+title: Proyecto 2 ‚Ä¢ Calificaciones y comentarios
#+options: toc:nil

* ¬øC√≥mo se califica este proyecto?

El esquema de calificaci√≥n es como sigue:

|--------+--------------------------------------------------------------------------------+--------------|
| Puntos | Descripci√≥n                                                                    | Fraccionable |
|--------+--------------------------------------------------------------------------------+--------------|
|      5 | Proyecto entregado                                                             | No           |
|      1 | Implementa (o intenta implementar) algoritmo de /Loter√≠a/                      | No           |
|      1 | El algoritmo de /Loter√≠a/ funciona correctamente                               | S√≠           |
|      1 | Implementa (o intenta implementar) algoritmo de /Retroalimentaci√≥n Multinivel/ | No           |
|      1 | El algoritmo de /Retroalimentaci√≥n Multinivel/ funciona correctamente          | S√≠           |
|      1 | Responde a las preguntas planteadas                                            | S√≠           |
|--------+--------------------------------------------------------------------------------+--------------|

La √∫ltima columna indica si puedo otorgar cr√©dito parcial en este
rubro, o si es binario (todo o nada).

* Las entregas

** Aranzua Chavez
- Documentaci√≥n :: [[./AranzuaChavez/readme.md][readme.md]]
- Archivos :: [[./AranzuaChavez/pro2_1.py][pro2_1.py]]
- Comentarios ::
  - Tu calificaci√≥n total es multiplicada por 0.75, por entrega
    extempor√°nea ‚òπ
  - El algoritmo que propones /no es el de loter√≠a/
    - De acuerdo, no mencion√© expl√≠citamente (¬°deb√≠ haberlo hecho!)
      que Loter√≠a es una planificaci√≥n /apropiativa/, no
      /cooperativa/, pero s√≠ mencion√© que el proceso se ejecuta por el
      /quantum/ que le toca (no por la carga completa de proceso que
      le queda)
    - No implementaste el mecanismo de /boletos/ descrito.
  - Entiendo que estuvieras apurado por entregar, pero tu archivo de
    texto tiene una cantidad de /dedazos/ apabullante ‚òπ

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |  0.25 |    1 |   0.25 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| Subtotal             |       |      |   7.25 |
| Entrega extempor√°nea |       | 0.75 |        |
| *Total*              |       |      | 5.4375 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)::@10$4=@8$4 * @9$3

** Arciga Fernando
- Documentaci√≥n :: [[./ArcigaFernando/proyecto2.pdf][proyecto2.pdf]]
- Archivos :: [[./ArcigaFernando/loteria.py][loteria.py]], [[./ArcigaFernando/multinivel.py][multinivel.py]]
- Comentarios ::
  - ¬°Muy bien por trabajarle a la parte est√©tica de tu ejecuci√≥n! üòÉ
  - Revis√© /por encimita/ tus implementaciones, y se ven en general
    correctas. La salida de tus procesos, sin embargo, es muy distinta
    ‚Äî me parece que en Retroalimentaci√≥n imprimes una √∫nica letra por
    cada /quantum/... La siguiente modificaci√≥n hacia la l√≠nea 45,
    agregando la variable =quant= y multiplicando al proceso de forma
    acorde, ayuda a entender mejor visualmente c√≥mo funciona (y que
    efectivamente implementa /Retroalimenaci√≥n/)
    #+begin_src python
      while len(q0) >= 1 or len(q1) >= 1 or len(q2) >= 1:
	  if len(q0) >= 1:
	      cola_en_exe = q0
	      quant = Quantums[0]
	  elif len(q1) >= 1:
	      cola_en_exe = q1
	      quant = Quantums[1]
	  else:
	      cola_en_exe = q2
	      quant = Quantums[2]

	  proceso_actual = cola_en_exe.pop(0)
	  plan += proceso_actual['color'] + proceso_actual['nombre'] * quant + '\033[0m'
    #+end_src

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |     10 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Armenta Fabian, Morales Carlos
- Documentaci√≥n :: [[./ArmentaFabian-MoralesCarlos/Proyecto 2.pdf][Proyecto 2.pdf]]
- Archivos :: [[./ArmentaFabian-MoralesCarlos/Loteria_Proyecto2.py][Loteria_Proyecto2.py]], [[./ArmentaFabian-MoralesCarlos/MultiNivel_Proyecto2.py][MultiNivel_Proyecto2.py]]
- Comentarios ::
  - ¬°Ojo! Cuando el SO le otorga un /quantum/ de /n/ ticks a un proceso,
    pero a √©ste le restan menos de /n/ ticks para terminar, el
    planificador /no se queda esperando/ a que termine el
    /quantum/. De la ejecuci√≥n de su programa:
    #+begin_export text
    La prioridad m√°s alta es 84 del proceso G 
    Se realiza Proceso G
    Proceso G ha terminado
    GGGGGGGGGGGG---

    La prioridad m√°s alta es 108 del proceso D 
    Se realiza Proceso D
    Proceso D ha terminado
    DDDDDDDDDDDD----------
    #+end_export
    - Tan pronto como el proceso sale de un estado en que pueda ser
      ejectuado, el SO lleva a cabo la siguiente decisi√≥n
    - El CPU no se queda /vac√≠o/ y esperando por ¬´la nada¬ª.
  - No podr√≠amos comparar /Loter√≠a/ con el /Banquero/, porque no
    pertenecen al mismo dominio :-√û

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |     10 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Bernal Gustavo, Toledo Dilan
- Documentaci√≥n :: [[./BernalGustavo-ToledoDilan/Documentaci√≥n Proyecto 2.pdf][Documentaci√≥n Proyecto 2.pdf]]
- Archivos :: [[./BernalGustavo-ToledoDilan/Proyecto2_Planificacion.py][Proyecto2_Planificacion.py]]
- Comentarios ::
  - El c√≥digo que presentan es casi id√©ntico al que les d√≠ como
    ejemplo para otro algoritmo; no lo modificaron de forma que
    implemente ninguno de los algoritmos que solicit√©
  - No responden a las preguntas que les solicit√©.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     0 |    1 |      0 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      5 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Camacho Juan, Razo Fernando
- Documentaci√≥n :: [[./CamachoJuan-RazoFernando/Proyecto2.pdf][Proyecto2.pdf]]
- Archivos :: [[./CamachoJuan-RazoFernando/loteria.py][loteria.py]], [[./CamachoJuan-RazoFernando/multi.py][multi.py]]
- Comentarios ::
  - Implementaci√≥n bonita, limpia y detallada. ¬°Bien!
  - /Retroalimentaci√≥n multinivel/ no asigna una cola de prioridad
    est√°tica a cada proceso dependiendo de su duraci√≥n (lo que
    presentan en las l√≠neas 23‚Äì29), sino que siempre entran en la m√°s
    alta, y van siendo /degradados/ a colas inferiores conforme m√°s
    tiempo duran.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |  0.75 |    1 |   0.75 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |   9.75 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Carranza Jose, Rios Gamaliel
- Documentaci√≥n :: [[./CarranzaJose-RiosGamaliel/README.md][README.md]]
- Archivos :: [[./CarranzaJose-RiosGamaliel/common.css][common.css]], [[./CarranzaJose-RiosGamaliel/common.js][common.js]], [[./CarranzaJose-RiosGamaliel/lottery/index.html][lottery/index.html]], [[./CarranzaJose-RiosGamaliel/lottery/index.js][lottery/index.js]], [[./CarranzaJose-RiosGamaliel/multilevel/index.html][multilevel/index.html]], [[./CarranzaJose-RiosGamaliel/multilevel/index.js][multilevel/index.js]]
- Comentarios ::
  - ¬°Muy bien! ¬°Implementado en otro lenguaje! Es toda una frescura
    revisar esto, aunque JavaScript y yo no seamos muy buenos amigos üòâ
  - Muy bonita implementaci√≥n, permite comprender muy bien el
    algoritmo sobre el tiempo.
  - Respecto a la inquietud que me plantean, no me queda muy
    clara... S√≠, los SO actuales monitorean a los procesos... Pero no
    entiendo a qu√© se refieren como el /c√°lculo excesivo de cada
    proceso que lleva en esepra/. ¬øSe refieren a que se calculan
    demasiados valores para cada proceso?

    Expl√≠quenme un poco esta duda, con gusto intento despejarla.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |     10 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Constantino Pablo, Juarez Cristopher
- Documentaci√≥n :: [[./ConstantinoPablo-JuarezCristopher/razonamiento.txt][razonamiento.txt]]
- Archivos :: [[./ConstantinoPablo-JuarezCristopher/loteria.py][loteria.py]]
- Comentarios ::
  - Hay varias carencias importantes en la implementaci√≥n que
    presentan:
    - Los procesos no se generan aleatoriamente, sino que est√°n
      especificados "en duro" en el c√≥digo.
    - No manejan un n√∫mero de tickets por proceso
    - A todos los procesos se les dan 3 ticks, independientemente de
      su duraci√≥n (esto es, de si ya terminaron).

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |   0.5 |    1 |    0.5 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    7.5 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Frias Camille, Organista Ricardo
- Documentaci√≥n :: [[./FriasCamille_OrganistaRicardo/Loteria.txt][Loteria.txt]], [[./FriasCamille_OrganistaRicardo/MultilevelFeedbackExplicacion.txt][MultilevelFeedbackExplicacion.txt]]
- Archivos :: [[./FriasCamille_OrganistaRicardo/Loteria.py][Loteria.py]], [[./FriasCamille_OrganistaRicardo/MultilevelFeedback.py][MultilevelFeedback.py]]
- Comentarios ::
  - ¬°Cada qui√©n elige sus masoquismos favoritos! üòâ Me da gusto haber
    influ√≠do en sus elecciones de con qu√© sufrir...
  - Ambos mecanismos de planificaci√≥n /me parece que/ est√°n
    correctos... pero no muestran la representaci√≥n al final para
    poder confirmar con el /oj√≥metro/ üôÅ
  - ¬°No te repitas! Cuando veo el siguiente comentario en el c√≥digo:

    #+begin_src python
      # El proceso para las demas colas se repite
      # por lo que podemos omitir los comentarios,
      # solo seria repetir la informacion =)
    #+end_src

    de inmediato pienso en el sabio precepto /DRY/: /Don't Repeat
    Yourself/. ¬°No te repitas a t√≠ mismo! Si la implementaci√≥n es la
    misma, ¬°encuentren c√≥mo evitarla! (si no, su c√≥digo se vuelve
    inmantenible)
  - La pregunta que presentan de la /inversi√≥n de prioridades/ entre
    dos procesos cuando el menos privilegiado ocupa recursos que
    requiere el m√°s privilegiado es uno de los puntos √°lgidos del
    /tiempo real/.  En el caso de la loter√≠a, la √∫nica noci√≥n que el
    sistema tiene de prioridad es la cantidad de boletos otorgados a
    cada uno de ellos.
  - Respecto a la pregunta que plantean en /Multinivel/, s√≠:
    Normalmente hay un n√∫mero m√°ximo definido de colas. Si no me
    equivoco, tanto MacOS como Windows implementan 16 colas. Algunas
    de estas colas son llamadas /de tiempo real/, pero no es TR real:
    son √∫nicamente colas de prioridad superior a las /normales/, y
    para las cuales no est√° definida la migraci√≥n (siempre tienen
    prioridad).
    - No se preocupen tanto por los algoritmos de planificaci√≥n. Son
      sin duda importantes, pero m√°s importante es la salud mental, y
      que duerman sus ocho horas diarias.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |   0.7 |    1 |    0.7 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |   0.7 |    1 |    0.7 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    9.4 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Garcia Erik
- Documentaci√≥n :: [[./GarciaErik/Loteria.txt][Loteria.txt]], [[./GarciaErik/Multinivel.txt][Multinivel.txt]]
- Archivos :: [[./GarciaErik/Proyecto2_loteria.py][Proyecto2_loteria.py]], [[./GarciaErik/Proyecto2_multinivel.py][Proyecto2_multinivel.py]]
- Comentarios ::
  - Me parece que la implementaci√≥n de ambas ejecuciones es correcta,
    pero /extra√±√©/ ver las cadenas con las ejecuciones (esto es m√°s
    f√°cil de juzgar a ojo üòâ)
  - En la implementaci√≥n de /Loter√≠a/, no toman en cuenta el momento
    de llegada de cada uno de los procesos, y por tanto, la tabla de
    ejecuci√≥n entrega valores imposibles (menores a 0). Por ejemplo:
    #+begin_src bash
      $ python3 GarciaErik/Proyecto2_loteria.py 
      Lista de procesos:
      Proceso   Llegada   Duraci√≥n    Prioridad
       A           0          10         2
       B           6           5         2
       C          12           9         3
       D           4           9         1
       E          26           5         2
       F          14           8         3
       G          56           5         2

      ,* Inicia ejecuci√≥n

      Tabla de ejecuci√≥n:
      Proceso Inicio Fin      T       E       P
      G	0	5	5	-56	-11.2
      C	5	14	9	-7	-0.8
      E	14	19	5	-12	-2.4
      B	19	24	5	13	2.6
      A	24	34	10	24	2.4
      D	34	43	9	30	3.3
      F	43	51	8	29	3.6

      Duraci√≥n total: 51
    #+end_src
    - El proceso =G= no dura 5, pero llega en =t=56=. Si lo pones a
      ejecutar de =t=0= a =t=5=, naturalmente tendr√° un tiempo de
      espera (incorrecto) de -56.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |   0.3 |    1 |    0.3 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |   0.7 |    1 |    0.7 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |     9. |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Magno Omar, Solis Alan
- Documentaci√≥n :: [[./MagnoOmar-SolisAlan/Proyecto 2 Planificaci√≥n por Retroa.txt][Proyecto 2 Planificaci√≥n por Retroa.txt]]
- Archivos :: [[./MagnoOmar-SolisAlan/loteria.py][loteria.py]], [[./MagnoOmar-SolisAlan/multinivel.py][multinivel.py]]
- Comentarios ::
  - ¬°Buenas implementaciones! Concisas y f√°ciles de leer.
  - pero no me permitieron ver su razonamiento con las preguntitas que
    les lanc√© üôÅ
|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      9 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Marquez Axel, Oronzor Manases
- Documentaci√≥n :: [[./MarquezAxel-OronzorManases/README.md][README.md]]
- Archivos :: [[./MarquezAxel-OronzorManases/planificacion_por_retroalimentacion_loteria.py][planificacion_por_retroalimentacion_loteria.py]], [[./MarquezAxel-OronzorManases/planificacion_por_retroalimentacion_loteria_2.py][planificacion_por_retroalimentacion_loteria_2.py]], [[./MarquezAxel-OronzorManases/planificacion_por_retroalimentacion_multinivel.py][planificacion_por_retroalimentacion_multinivel.py]]
- Comentarios ::
  - Su calificaci√≥n total es multiplicada por 0.75, por entrega
    extempor√°nea ‚òπ
  - ¬°Guau! ¬°Qu√© recorrido tan completo y detallado por el c√≥digo!
    - Se ve que le dedicaron un buen tiempo a explicarlo a
      detalle... Pero bueno, cuando explicamos un programa ‚Äî podemos
      dejar que /el c√≥digo hable/ un poco m√°s, sobre todo para otros
      programadores,  y concentrar nuestra energ√≠a en explicar los
      puntos /menos claros/.
  - La explicaci√≥n se enfoca al algoritmo de loter√≠a "v2". Pero hay un
    segundo algoritmo de loter√≠a. ¬øPor qu√© /dos implementaciones/? (¬°y
    ambas se ven bastante bien!)
  - Los comentarios que presentan: Si este proyecto tuvo por efecto
    que estudiaran y /re-repasaran/ Retroalimentaci√≥n
    Multinivel... ¬°Muy bien! Mi trabajo est√° cumplido üòâ
  - En esta ocasi√≥n, no tengo mi implementaci√≥n para mostrarles... no
    la hice üòâ ¬°Pero pueden comparar con la de todos sus compa√±eros!

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| Subtotal             |       |      |     10 |
| Entrega extempor√°nea |       | 0.75 |        |
| *Total*              |       |      |    7.5 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)::@10$4=@8$4 * @9$3

** Martinez Christian, Santiago Aldo
- Documentaci√≥n :: [[./MartinezChristian_SantiagoAldo/README.md][README.md]]
- Archivos :: [[./MartinezChristian_SantiagoAldo/proyecto02.py][proyecto02.py]]
- Comentarios ::
  - Si el algoritmo que implementan /selecciona el proceso con la hora
    de llegada m√°s temprana y lo ejecuta hasta que se completa o se
    bloquea, y luego selecciona el siguiente proceso en orden de
    llegada/, no es uno de los algoritmos solicitados, sino que FIFO o
    Ronda üôÅ
    - El que haya una =duracion_maxima= hace que sea una Ronda, y esa
      duraci√≥n es el tama√±o del quantum
    - Pero la ejecuci√≥n es sub√≥ptima: Dado que esperan a terminar con
      todos los procesos que se van a encolar en un momento dado,
      hayan estos llegado o no, vemos cadenas de salida como:
      #+begin_src text
	Planificaci√≥n realizada:
	AAAAAAAA--BBBBBBBCCCCCC-----DDDD-------EEEEEEEEFFFFFFFFAEF
	Duraci√≥n total: 55
      #+end_src
      Pero =A= podr√≠a volver a ser puesto en ejecuci√≥n en cualquier
      momento que tuvi√©ramos /colgado/ del sistema, sin necesidad a
      esperar a que aparezcan (y sean despachados) =E= y =F=.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |   0.5 |    1 |    0.5 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    6.5 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Martinez Julio
- Documentaci√≥n :: [[./MartinezJulio/Loter√≠a.txt][Loter√≠a.txt]], [[./MartinezJulio/Multinivel.txt][Multinivel.txt]]
- Archivos :: [[./MartinezJulio/proyecto2-1.py][proyecto2-1.py]], [[./MartinezJulio/proyecto2-2.py][proyecto2-2.py]]
- Comentarios ::
  - ¬°Hazme el trabajo un poquito m√°s f√°cil! üòâ ¬°indica de alguna
    manera f√°cil de reconocer de qu√© algoritmo se tratan
    =proyecto2-1.py= y =proyecto2-2.py=! (son respectivamente
    multinivel y loter√≠a)
  - Para /multinivel/, si bien manejas una /lista ordenada por
    prioridad/, no veo que haya varias listas (varios niveles), que es
    lo que da su nombre a este algoritmo
  - Para /loter√≠a/, si bien hay varios puntos en que usas la
    aleatoriedad, ninguno de ellos es hasta donde pude entender para
    elegir el siguiente proceso a elegir (ni veo menci√≥n a los boletos
    (que es el coraz√≥n del esquema)

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      7 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Meneses Erick, Mex Aerin
- Documentaci√≥n :: [[./MenesesErick-MexAerin/README.txt][README.txt]]
- Archivos :: [[./MenesesErick-MexAerin/RetroMulti.py][RetroMulti.py]], [[./MenesesErick-MexAerin/loteria.py][loteria.py]]
- Comentarios ::
  - ¬°Bonitas implementaciones! Simples y limpias.
  - Me parece que en /Loter√≠a/ se asume que todos los procesos llegan
    desde =t=0=, no que pueden llegar en diferentes momentos de la
    ventana de tiempo que observamos.
    - en /Retroalimentaci√≥n/, la clase =process= s√≠ tiene un atributo
      =tiempo=.
  - ¬°Cuiden la ortograf√≠a! ¬øC√≥mo que =el proceso A a terminado=? üòù
  - Para /Retroalimentaci√≥n/, si bien implementan 5 colas, las 5
    presentan el mismo comportamiento. Recuerden que la "fuerza" de
    este mecanismo es la capacidad de modular /n/ y /q/.
  - ¬°No te repitas! Cuando veo el siguiente comentario en el c√≥digo:
    #+begin_src text
      #De aqui hasta la cola 3 es basicamente lo mismo
    #+end_src
    y la repetici√≥n que le sigue, de inmediato pienso en el sabio
    precepto /DRY/: /Don't Repeat Yourself/. ¬°No te repitas a t√≠
    mismo! Si la implementaci√≥n es la misma, ¬°encuentren c√≥mo
    evitarla! (si no, su c√≥digo se vuelve inmantenible). Quise probar
    modificando para aumentar el quantum en FB, y tuve que picarle en
    demasiados lugares
  - ¬øY mis preguntitas? üôÅ

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |   0.7 |    1 |    0.7 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    8.7 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Miranda Juan
- Documentaci√≥n :: [[./MirandaJuan/proyecto2_SO.txt][proyecto2_SO.txt]]
- Archivos :: [[./MirandaJuan/SO_spn_proyecto2.py][SO_spn_proyecto2.py]], [[./MirandaJuan/proyecto2_SO_loteria.py][proyecto2_SO_loteria.py]]
- Comentarios ::
  - Me falt√≥ la respuesta a mis preguntitas üôÅ
  - Los dos algoritmos que ped√≠ eran loter√≠a y /retroalimentaci√≥n
    multinivel/.
  - Una diferencia importante entre el algoritmo ejemplo que les puse
    y los que les ped√≠ es que /FIFO/ es /cooperativo/ (por eso inclu√≠
    el comentario =El proceso se ejecuta por toda la carga de trabajo
    que tiene=), en tanto que /Loter√≠a/ y /Retroalimentaci√≥n
    Multinivel/ son ambos /preventivos/ o /apropiativos/, esto es, un
    proceso se pone en ejecuci√≥n por cierto n√∫mero de /ticks/ (y no
    hasta que √©ste decida entregar de vuelta el control).
  - Para que lo que implementaste pueda entenderse como /loter√≠a/,
    tendr√≠a que haber alg√∫n elemento de /aleatoriedad/ al poner a uno
    de los procesos en ejecuci√≥n, o concepto de /boletos/.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      6 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Morales Fernando
- Documentaci√≥n :: [[./MoralesFernando/Reporte_Morales_Zilli.pdf][Reporte_Morales_Zilli.pdf]]
- Archivos :: [[./MoralesFernando/fb.py][fb.py]], [[./MoralesFernando/lottery.py][lottery.py]]
- Comentarios ::
  - El /problema/ que describes como inanici√≥n no es inanici√≥n... Si
    no hay ning√∫n proceso por ejecutar, pues no se ejecuta nada y
    punto üòú
    - Inanici√≥n es cuando el sistema tiene trabajo por hacer, y avanza
      /de alguna manera/ con este trabajo, pero alg√∫n patr√≥n de uso
      /castiga/ a alguno de los procesos o categor√≠as de procesos
      haci√©ndole esperar fuera de lo que se considera adecuado.
  - Me parece que tu implementaci√≥n de ambos algoritmos es correcta
    (leyendo el fuente y observando /por encimita/ la ejecuci√≥n), pero
    me falta la confirmaci√≥n visual que les mostr√© en el ejemplo, as√≠
    como el c√≥mputo de totales globales de la ejecuci√≥n.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |   0.8 |    1 |    0.8 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |   0.8 |    1 |    0.8 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    9.6 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Paniagua Eduardo
- Documentaci√≥n :: [[./PaniaguaEduardo/preguntas.txt][preguntas.txt]]
- Archivos :: [[./PaniaguaEduardo/fb.py][fb.py]], [[./PaniaguaEduardo/loteria.py][loteria.py]]
- Comentarios ::
  - ¬°Muy buenas respuestas a las preguntas! Algunas muestran que, o
    has estudiado con detenimiento, o tienes muy buena intuici√≥n en la
    materia üòÉ
  - Interesante c√≥mo inicializas tus colas ya "cargaditas" de procesos
    en /FB/. Formalmente, te dir√≠a que todos los procesos ‚Äìseg√∫n la
    definici√≥n del algoritmo‚Äì deber√≠an iniciar siendo aceptados en la
    cola de prioridad m√°s alta. Sin embargo, para una simulaci√≥n
    sencilla, y para ilustrar mejor que est√°s tomando una /foto/ de un
    sistema vivo... Te lo doy perfectamente por bueno üòâ
  - La implementaci√≥n de loter√≠a, sin embargo... no me parece que sea
    lo que ped√≠. Manejas tres colas (este esquema maneja una √∫nica
    cola), y no hay reparto/sorteo de boletos üôÅ

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      9 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Ramirez Daniel
- Archivos :: [[./RamirezDaniel/Proyecto2-multi.py][Proyecto2-multi.py]]
- Comentarios ::
  - S√≥lo entregaste la implementaci√≥n de uno de los algoritmos, y no
    es el algoritmo solicitado
    - Es el algoritmo ejemplo que yo propuse, agregando √∫nicamente la
      tabla de ejecuci√≥n.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     0 |    1 |      0 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      6 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Rangel Jose
- Documentaci√≥n :: [[./RangelJose/loteriaDoc.txt][loteriaDoc.txt]], [[./RangelJose/multinivelDoc.txt][multinivelDoc.txt]], [[./RangelJose/readme.md][readme.md]]
- Archivos :: [[./RangelJose/loteria.py][loteria.py]], [[./RangelJose/multinivel.py][multinivel.py]]
- Otros archivos ::  [[./RangelJose/loteria1.txt][loteria1.txt]], [[./RangelJose/loteria2.txt][loteria2.txt]], [[./RangelJose/loteria3.txt][loteria3.txt]], [[./RangelJose/multinivel1.txt][multinivel1.txt]], [[./RangelJose/multinivel2.txt][multinivel2.txt]], [[./RangelJose/multinivel3.txt][multinivel3.txt]]
- Comentarios ::
  - Me falt√≥ la respuesta a mis preguntitas üôÅ
  - ¬°Muy interesante implementaci√≥n de la loter√≠a!
  - Adem√°s, te aventaste el boleto de /crear hilos/ para los
    diferentes procesos ‚Äî ¬°mayor complejidad que la que el
    planteamiento te requer√≠a!
  - Ojo, la planificaci√≥n multinivel /no es lo mismo/ (no sigue la
    misma l√≥gica de operaci√≥n) que la de Loter√≠a. Ante un mismo
    conjunto de procesos, las decisiones que toma /s√≠ son
    determin√≠sticas/.
    - Adem√°s, estructura la atenci√≥n a los procesos en varias /colas
      de prioridad/, que no veo en tu programa.
  - Me parece que no puedo calificar al algoritmo que implementaste
    como una retroalimentaci√≥n multinivel üôÅ

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      8 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Rivera Mauricio, Ruiz Laura
- Documentaci√≥n :: [[./RiveraMauricio-RuizLaura/README.md][README.md]]
- Archivos :: [[./RiveraMauricio-RuizLaura/loteria.py][loteria.py]], [[./RiveraMauricio-RuizLaura/retromulti.py][retromulti.py]]
- Comentarios ::
  - ¬°Me gusta la modificaci√≥n que hacen en FB cuando todos los
    procesos han ido "migrando" a colas posteriores! ¬°Muy original y
    bien fundamentado!

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |     10 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Rojas Laylet, Ruiz Miguel
- Documentaci√≥n :: [[./RojasLaylet-RuizMiguel/Planificador de Procesos.pdf][Planificador de Procesos.pdf]]
- Archivos :: [[./RojasLaylet-RuizMiguel/RoundRobin.py][RoundRobin.py]], [[./RojasLaylet-RuizMiguel/planificadorLoteria.py][planificadorLoteria.py]]
- Comentarios ::
  - Ojo, ¬°retroalimentaci√≥n multinivel /usa varias colas/, cada una de
    las cuales se maneja por Ronda (/Round Robin/). La implementaci√≥n
    que entregaron... no es la que solicit√© üôÅ
  - En /Loter√≠a/, si bien al crear un proceso se genera con una
    duraci√≥n == random.randint(80,120)= como les solicit√©, la
    simulaci√≥n corre para siempre
    - ...Y tiene sentido: Tienen a todos los procesos en =cola=, pero
      si bien le van quitando =tickets= a cada =proceso=,  nunca lo
      retiran de =cola=, por lo que el =while= de la l√≠nea 41 no
      terminar√° nunca.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |  0.25 |    1 |   0.25 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |  0.25 |    1 |   0.25 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    8.5 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Rojo Luis, Uriarte Yahir
- Documentaci√≥n :: [[./RojoLuis-UriarteYahir/Proyecto2.pdf][Proyecto2.pdf]]
- Archivos :: [[./RojoLuis-UriarteYahir/PlanificadorFB.py][PlanificadorFB.py]], [[./RojoLuis-UriarteYahir/PlanificadorLoteria.py][PlanificadorLoteria.py]]
- Comentarios ::
  - Me gusta la implementaci√≥n usando =Queue=. ¬°Bien! üòÉ
  - La l√≥gica del manejo de varias colas lleva a mucha repetici√≥n en
    su c√≥digo, y eso lleva a una gran rigidez: ¬øQu√© pasa si en vez de
    3 colas te piden que sean 5? ¬°Hay que copiar manualmente el cacho
    de c√≥digo, y editarlo para modificar los detalles dependientes de
    la posici√≥n. ¬°No olviden al sabio /principio DRY/ (Don't Repeat
    Yourself) Si ves que se repite tu l√≥gica, busca c√≥mo xpresar lo
    mismo de forma que quede parametrizado.
  - Respecto  las respuestas que entregan: Recuerden que en
    /Retroalimentaci√≥n Multinivel/ el administrador no /asigna/
    prioridades, sino que las prioridades /se van determinando
    autom√°ticamente/ por la duraci√≥n de un proceso en la cola. Todos
    los procesos llegan siendo de m√°xima prioridad (y, contrario a lo
    que indican, s√≥lo son /degradados/, nunca promovidos).
  - Ya viendo las implementaciones: Las decisiones de planificaci√≥n se
    toman /a cada momento, basados en la situaci√≥n existente/. Eso
    significa que en la loter√≠a, a cada quantum, s√≥lo participan en el
    sorteo aquellos procesos /que ya llegaron y no han
    finalizado/. Esto es, ante una ejecuci√≥n como esta:
    #+begin_src text
      $ python3 RojoLuis-UriarteYahir/PlanificadorLoteria.py
      Lista de procesos:

      Proceso   Tickets   Duracion

	 A          0        116
	 B          9         93
	 C          7         89
	 D         16        114
	 E          5         82

       - Comenzemos üòé -

      t=7
      t=44  ‚åö C 37 tick

       - Orden de los resultados por loteria ü§ì : -
      -------CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       - Duraci√≥n total ‚è±Ô∏è : 44 -
    #+end_src
    Para cualquier ~t < 5~, s√≥lo se sortea entre los boletos de =A=
    (porque es el √∫nico proceso que ha llegado). Para ~5 <= t < 7~ se
    consideran los boletos de =A, B, E=. Para partir de ~7 <= t < 16~,
    se sortea entre =A, B, C, E=. Y a partir de ~t = 16~ y hasta que
    comiencen a terminar, ya se consideran todos.
  - Para /Retroalimentaci√≥n Multinivel/, me parece que la
    implementaci√≥n est√° mayomente correcta, pero se detiene en el
    momento en que no hay ning√∫n proceso pendiente. Esto es:
    #+begin_src text

      Lista de procesos:
      Proceso         Duraci√≥n        Llegada
	 A               7               0
	 B               5               8
	 C               9              19
	 D               6               8
      t=0 soy el proceso A y tengo una prioridad de 0
      El proceso A se ejecuta por 1 ticks
      t=1 soy el proceso A y tengo una prioridad de 1
      El proceso A se ejecuta por 2 ticks
      t=3 soy el proceso A y tengo una prioridad de 2
      El proceso A se ejecuta por 3 ticks
      t=6 soy el proceso A y tengo una prioridad de 0
      A termin√≥ en el tiempo 7
    #+end_src
    Como los procesos =B= y =D= llegan en =t=8=, y el algoritmo no
    contempla que puede haber /tiempos muertos/ leg√≠timamente, termina
    antes de tiempo, habiendo ejecutado √∫nicamente a uno de los
    procesos.
  - Veo que agregaron la cl√°usula que sugieren en el texto:
    #+begin_src python
	      elif not baja_prio_queue.empty():
		  # (...)
		  if proceso['duraci√≥n'] > 0:
		      # Si el proceso a√∫n no ha terminado, lo sube de nivel para evitar que el proceso pase m√°s tiempo sin ejecutarse
		      proceso['prioridad'] = alta_prio
		      alta_prio_queue.put(proceso)
    #+end_src
    Esto no forma parte del algoritmo descrito, pero lo acepto dado
    que lo documentaron üòâ
  - ¬°Una disculpa por no haber terminado de calificar esta
    implementaci√≥n junto con las otras!

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     0 |    1 |      0 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |   0.7 |    1 |    0.7 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    8.7 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Rosado Kareem
- Documentaci√≥n :: [[./RosadoKareem/loteria.pdf][loteria.pdf]]
- Archivos :: [[./RosadoKareem/loterias.py][loterias.py]]
- Comentarios ::
  - Me falt√≥ la respuesta a mis preguntitas üôÅ
  - Si bien tu implemntaci√≥n elige a uno de los procesos en la cola de
    ejecuci√≥n de forma aleatoria (l√≠nea 42), no lo hace siguiendo el
    esquema de boletos/tickets especificado, ino que √∫nicamente sobre
    la /duraci√≥n total/ de cada uno de los procesos.

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |   0.7 |    1 |    0.7 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| *Total*              |       |      |    6.7 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** Sanchez Marco, Teran Mario
- Documentaci√≥n :: [[./SanchezMarco-TeranMario/README.md][README.md]]
- Archivos :: [[./SanchezMarco-TeranMario/loteria/Cargo.toml][Cargo.toml]], [[./SanchezMarco-TeranMario/loteria/src/main.rs][main.rs]]
- Comentarios ::
  - Me falt√≥ la respuesta a mis preguntitas üôÅ
  - Su calificaci√≥n total es multiplicada por 0.75, por entrega
    extempor√°nea ‚òπ
  - En el =README.md= tienen una confusi√≥n reiterada entre /proceso/ y
    /proyecto/ üòâ
  - Con la l√≥gica que presentan para el reparto de tickets, ¬øc√≥mo
    enfreel hecho de que un proceso puede ser puesto en ejecuci√≥n
    /antes de haber llegado/? Esto es, tomen esta ejecuci√≥n ejemplo:
    #+begin_src text
      Lista de procesos:
      Proceso   Duracion   Llegada
      A	 7	    0
      B	 9	    11
      C	 6	    7
      D	 9	    24
      E	 9	    32
      F	 8	    56

      Reparticion de tickets
      No. de ticket: 1
      Proceso: F
      No. de ticket: 2
      Proceso: F
      No. de ticket: 3
      Proceso: C
      No. de ticket: 4
      Proceso: E
      No. de ticket: 5
      Proceso: E
      No. de ticket: 6
      (...)
    #+end_src
    En =t=0= (y hasta =t<=7=) √∫nicamente =A= deber√≠a ejecutarse; desde
    ah√≠ y hasta =t=11=, s√≥lo deber√≠amos ver que alternaran =A= y =B=,
    etc.
  - ¬°No le echen la culpa a su elecci√≥n de lenguaje! Claro, escribir
    en Rust es m√°s complicado porque el compilador verifica /que no
    hagamos ninguna tonter√≠a/ (...¬øya ven por qu√© no le agarro al
    maldito lenguaje?), ¬°pero no va a imposibilitar llevar
    contabilidad respecto a la planificaci√≥n que hicieron!

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |   0.7 |    1 |    0.7 |
| Implementa /FB/      |     0 |    1 |      0 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     0 |    1 |      0 |
|----------------------+-------+------+--------|
| Subtotal             |       |      |    6.7 |
| Entrega extempor√°nea |       | 0.75 |        |
| *Total*              |       |      |  5.025 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)::@10$4=@8$4 * @9$3

** Sotelo Axel, Sierra Nayeli
- Documentaci√≥n :: [[./SoteloAxel_SierraNayeli/SoteloAxel_SierraNayeli_Reporte.pdf][SoteloAxel_SierraNayeli_Reporte.pdf]]
- Archivos :: [[./SoteloAxel_SierraNayeli/lotteria.py][lotteria.py]], [[./SoteloAxel_SierraNayeli/multinivel.py][multinivel.py]]
- Comentarios ::
  - intentar ejecutar la planificaci√≥n multinivel me da error:
    #+begin_src python
      $ python3 SoteloAxel_SierraNayeli/multinivel.py 
      Traceback (most recent call last):
	File "/home/gwolf/vcs/sistop-2023-2/proyectos/2/SoteloAxel_SierraNayeli/multinivel.py", line 37, in <module>
	  'duracion': random.randint(ticketMinimo, ticketMaximo),
		      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	File "/usr/lib/python3.11/random.py", line 362, in randint
	  return self.randrange(a, b+1)
		 ^^^^^^^^^^^^^^^^^^^^^^
	File "/usr/lib/python3.11/random.py", line 345, in randrange
	  raise ValueError("empty range for randrange() (%d, %d, %d)" % (istart, istop, width))
      ValueError: empty range for randrange() (5, 2, -3)
    #+end_src
    - Me pareci√≥ que el problema podr√≠a ser en que =ticketMinimo=5= y
      =ticketMaximo=5=, pero me dej√≥ fundamentalmente en las mismas
      #+begin_src python
	$ python3 SoteloAxel_SierraNayeli/multinivel.py 
	Traceback (most recent call last):
	  File "/home/gwolf/vcs/sistop-2023-2/proyectos/2/SoteloAxel_SierraNayeli/multinivel.py", line 37, in <module>
	    'duracion': random.randint(ticketMinimo, ticketMaximo),
			^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  File "/usr/lib/python3.11/random.py", line 362, in randint
	    return self.randrange(a, b+1)
		   ^^^^^^^^^^^^^^^^^^^^^^
	  File "/usr/lib/python3.11/random.py", line 345, in randrange
	    raise ValueError("empty range for randrange() (%d, %d, %d)" % (istart, istop, width))
	ValueError: empty range for randrange() (5, 2, -3)
      #+end_src


|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     0 |    1 |      0 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |      9 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

** V√°zquez Fredin, Arellano Israel
- Documentaci√≥n :: [[./V√°zquezFredin-ArellanoIsrael/Images/1.jpg][1.jpg]], [[./V√°zquezFredin-ArellanoIsrael/Images/2.jpg][2.jpg]], [[./V√°zquezFredin-ArellanoIsrael/Images/3.jpg][3.jpg]], [[./V√°zquezFredin-ArellanoIsrael/Images/4.jpg][4.jpg]], [[./V√°zquezFredin-ArellanoIsrael/Images/5.jpg][5.jpg]], [[./V√°zquezFredin-ArellanoIsrael/Images/6.jpg][6.jpg]], [[./V√°zquezFredin-ArellanoIsrael/README.md][README.md]]
- Archivos :: [[./V√°zquezFredin-ArellanoIsrael/Planificaci√≥n_por_Loteria.py][Planificaci√≥n_por_Loteria.py]], [[./V√°zquezFredin-ArellanoIsrael/Planificaci√≥n_por_Retroalimentaci√≥n_Multinivel.py][Planificaci√≥n_por_Retroalimentaci√≥n_Multinivel.py]]
- Comentarios ::

  - ¬°Muy buenas implementaciones!

|----------------------+-------+------+--------|
| *Calificaci√≥n*       | Valor | Peso | Puntos |
|----------------------+-------+------+--------|
| Proyecto entregado   |     1 |    5 |      5 |
| Implementa /Loter√≠a/ |     1 |    1 |      1 |
| /Loter√≠a/ funciona   |     1 |    1 |      1 |
| Implementa /FB/      |     1 |    1 |      1 |
| /FB/ funciona        |     1 |    1 |      1 |
| Responde preguntas   |     1 |    1 |      1 |
|----------------------+-------+------+--------|
| *Total*              |       |      |     10 |
|----------------------+-------+------+--------|
#+TBLFM: @2$4..@7$4=$2 * $3::@8$4=vsum(@2..@7)

